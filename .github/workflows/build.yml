name: Build and Publish Electron App

on:
  push:
    branches:
      - main  # Or your preferred branch

jobs:
  build:
    runs-on: ubuntu-latest  # Or windows-latest, depending on your environment

    permissions:
      contents: write  # Allow write access to the repository contents (necessary for pushing tags)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Or your preferred Node.js version

    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/my-app/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci
      working-directory: ./my-app

    - name: Build the Electron app
      run: npm run make
      working-directory: ./my-app

    - name: Archive the build
      run: |
        mkdir build
        mv out/* build/
        cd build
        zip -r electron-app.zip .
      working-directory: ./my-app

    # Create and push Git tag if not exists
    - name: Get current date
      id: date
      run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Determine revision number
      id: rev
      run: |
        TAG_PREFIX="${{ env.DATE }}"
        REV_COUNT=$(git tag -l "${TAG_PREFIX}.*" | wc -l)
        REV=$((REV_COUNT + 1))
        echo "REV=${REV}" >> $GITHUB_ENV

    - name: Create new tag
      run: |
        TAG="${{ env.DATE }}.${{ env.REV }}"
        git tag $TAG
        git push origin $TAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload ZIP to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: my-app/build/electron-app.zip
        tag_name: ${{ env.DATE }}.${{ env.REV }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
